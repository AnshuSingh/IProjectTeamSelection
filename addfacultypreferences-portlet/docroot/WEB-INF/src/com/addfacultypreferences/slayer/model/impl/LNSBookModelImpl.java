/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.addfacultypreferences.slayer.model.impl;

import com.addfacultypreferences.slayer.model.LNSBook;
import com.addfacultypreferences.slayer.model.LNSBookModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the LNSBook service. Represents a row in the &quot;LNS_LNSBook&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.addfacultypreferences.slayer.model.LNSBookModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LNSBookImpl}.
 * </p>
 *
 * @author Eshwari
 * @see LNSBookImpl
 * @see com.addfacultypreferences.slayer.model.LNSBook
 * @see com.addfacultypreferences.slayer.model.LNSBookModel
 * @generated
 */
public class LNSBookModelImpl extends BaseModelImpl<LNSBook>
	implements LNSBookModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l n s book model instance should use the {@link com.addfacultypreferences.slayer.model.LNSBook} interface instead.
	 */
	public static final String TABLE_NAME = "LNS_LNSBook";
	public static final Object[][] TABLE_COLUMNS = {
			{ "nameId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "number_", Types.VARCHAR },
			{ "dateAdded", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table LNS_LNSBook (nameId LONG not null primary key,name VARCHAR(75) null,email VARCHAR(75) null,number_ VARCHAR(75) null,dateAdded DATE null)";
	public static final String TABLE_SQL_DROP = "drop table LNS_LNSBook";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.addfacultypreferences.slayer.model.LNSBook"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.addfacultypreferences.slayer.model.LNSBook"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.addfacultypreferences.slayer.model.LNSBook"));

	public LNSBookModelImpl() {
	}

	public long getPrimaryKey() {
		return _nameId;
	}

	public void setPrimaryKey(long primaryKey) {
		setNameId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_nameId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return LNSBook.class;
	}

	public String getModelClassName() {
		return LNSBook.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("nameId", getNameId());
		attributes.put("name", getName());
		attributes.put("email", getEmail());
		attributes.put("number", getNumber());
		attributes.put("dateAdded", getDateAdded());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long nameId = (Long)attributes.get("nameId");

		if (nameId != null) {
			setNameId(nameId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String number = (String)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}

		Date dateAdded = (Date)attributes.get("dateAdded");

		if (dateAdded != null) {
			setDateAdded(dateAdded);
		}
	}

	public long getNameId() {
		return _nameId;
	}

	public void setNameId(long nameId) {
		_nameId = nameId;
	}

	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	public void setEmail(String email) {
		_email = email;
	}

	public String getNumber() {
		if (_number == null) {
			return StringPool.BLANK;
		}
		else {
			return _number;
		}
	}

	public void setNumber(String number) {
		_number = number;
	}

	public Date getDateAdded() {
		return _dateAdded;
	}

	public void setDateAdded(Date dateAdded) {
		_dateAdded = dateAdded;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LNSBook.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LNSBook toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (LNSBook)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		LNSBookImpl lnsBookImpl = new LNSBookImpl();

		lnsBookImpl.setNameId(getNameId());
		lnsBookImpl.setName(getName());
		lnsBookImpl.setEmail(getEmail());
		lnsBookImpl.setNumber(getNumber());
		lnsBookImpl.setDateAdded(getDateAdded());

		lnsBookImpl.resetOriginalValues();

		return lnsBookImpl;
	}

	public int compareTo(LNSBook lnsBook) {
		long primaryKey = lnsBook.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		LNSBook lnsBook = null;

		try {
			lnsBook = (LNSBook)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = lnsBook.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LNSBook> toCacheModel() {
		LNSBookCacheModel lnsBookCacheModel = new LNSBookCacheModel();

		lnsBookCacheModel.nameId = getNameId();

		lnsBookCacheModel.name = getName();

		String name = lnsBookCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			lnsBookCacheModel.name = null;
		}

		lnsBookCacheModel.email = getEmail();

		String email = lnsBookCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			lnsBookCacheModel.email = null;
		}

		lnsBookCacheModel.number = getNumber();

		String number = lnsBookCacheModel.number;

		if ((number != null) && (number.length() == 0)) {
			lnsBookCacheModel.number = null;
		}

		Date dateAdded = getDateAdded();

		if (dateAdded != null) {
			lnsBookCacheModel.dateAdded = dateAdded.getTime();
		}
		else {
			lnsBookCacheModel.dateAdded = Long.MIN_VALUE;
		}

		return lnsBookCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{nameId=");
		sb.append(getNameId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append(", dateAdded=");
		sb.append(getDateAdded());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.addfacultypreferences.slayer.model.LNSBook");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>nameId</column-name><column-value><![CDATA[");
		sb.append(getNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateAdded</column-name><column-value><![CDATA[");
		sb.append(getDateAdded());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LNSBook.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			LNSBook.class
		};
	private long _nameId;
	private String _name;
	private String _email;
	private String _number;
	private Date _dateAdded;
	private LNSBook _escapedModelProxy;
}