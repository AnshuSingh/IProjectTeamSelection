/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.asu.iproject.student.skillset.model.impl;

import com.asu.iproject.student.skillset.model.Skillset;
import com.asu.iproject.student.skillset.model.SkillsetModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Skillset service. Represents a row in the &quot;Skillset_Skillset&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.asu.iproject.student.skillset.model.SkillsetModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SkillsetImpl}.
 * </p>
 *
 * @author zhengyan
 * @see SkillsetImpl
 * @see com.asu.iproject.student.skillset.model.Skillset
 * @see com.asu.iproject.student.skillset.model.SkillsetModel
 * @generated
 */
public class SkillsetModelImpl extends BaseModelImpl<Skillset>
	implements SkillsetModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a skillset model instance should use the {@link com.asu.iproject.student.skillset.model.Skillset} interface instead.
	 */
	public static final String TABLE_NAME = "Skillset_Skillset";
	public static final Object[][] TABLE_COLUMNS = {
			{ "studentID", Types.BIGINT },
			{ "asuid", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "skill1", Types.VARCHAR },
			{ "dateAdded", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Skillset_Skillset (studentID LONG not null primary key,asuid VARCHAR(75) null,email VARCHAR(75) null,skill1 VARCHAR(75) null,dateAdded DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Skillset_Skillset";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.asu.iproject.student.skillset.model.Skillset"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.asu.iproject.student.skillset.model.Skillset"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.asu.iproject.student.skillset.model.Skillset"));

	public SkillsetModelImpl() {
	}

	public long getPrimaryKey() {
		return _studentID;
	}

	public void setPrimaryKey(long primaryKey) {
		setStudentID(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_studentID);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Skillset.class;
	}

	public String getModelClassName() {
		return Skillset.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("studentID", getStudentID());
		attributes.put("asuid", getAsuid());
		attributes.put("email", getEmail());
		attributes.put("skill1", getSkill1());
		attributes.put("dateAdded", getDateAdded());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long studentID = (Long)attributes.get("studentID");

		if (studentID != null) {
			setStudentID(studentID);
		}

		String asuid = (String)attributes.get("asuid");

		if (asuid != null) {
			setAsuid(asuid);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String skill1 = (String)attributes.get("skill1");

		if (skill1 != null) {
			setSkill1(skill1);
		}

		Date dateAdded = (Date)attributes.get("dateAdded");

		if (dateAdded != null) {
			setDateAdded(dateAdded);
		}
	}

	public long getStudentID() {
		return _studentID;
	}

	public void setStudentID(long studentID) {
		_studentID = studentID;
	}

	public String getAsuid() {
		if (_asuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _asuid;
		}
	}

	public void setAsuid(String asuid) {
		_asuid = asuid;
	}

	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	public void setEmail(String email) {
		_email = email;
	}

	public String getSkill1() {
		if (_skill1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _skill1;
		}
	}

	public void setSkill1(String skill1) {
		_skill1 = skill1;
	}

	public Date getDateAdded() {
		return _dateAdded;
	}

	public void setDateAdded(Date dateAdded) {
		_dateAdded = dateAdded;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Skillset.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Skillset toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Skillset)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		SkillsetImpl skillsetImpl = new SkillsetImpl();

		skillsetImpl.setStudentID(getStudentID());
		skillsetImpl.setAsuid(getAsuid());
		skillsetImpl.setEmail(getEmail());
		skillsetImpl.setSkill1(getSkill1());
		skillsetImpl.setDateAdded(getDateAdded());

		skillsetImpl.resetOriginalValues();

		return skillsetImpl;
	}

	public int compareTo(Skillset skillset) {
		long primaryKey = skillset.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Skillset skillset = null;

		try {
			skillset = (Skillset)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = skillset.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Skillset> toCacheModel() {
		SkillsetCacheModel skillsetCacheModel = new SkillsetCacheModel();

		skillsetCacheModel.studentID = getStudentID();

		skillsetCacheModel.asuid = getAsuid();

		String asuid = skillsetCacheModel.asuid;

		if ((asuid != null) && (asuid.length() == 0)) {
			skillsetCacheModel.asuid = null;
		}

		skillsetCacheModel.email = getEmail();

		String email = skillsetCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			skillsetCacheModel.email = null;
		}

		skillsetCacheModel.skill1 = getSkill1();

		String skill1 = skillsetCacheModel.skill1;

		if ((skill1 != null) && (skill1.length() == 0)) {
			skillsetCacheModel.skill1 = null;
		}

		Date dateAdded = getDateAdded();

		if (dateAdded != null) {
			skillsetCacheModel.dateAdded = dateAdded.getTime();
		}
		else {
			skillsetCacheModel.dateAdded = Long.MIN_VALUE;
		}

		return skillsetCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{studentID=");
		sb.append(getStudentID());
		sb.append(", asuid=");
		sb.append(getAsuid());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", skill1=");
		sb.append(getSkill1());
		sb.append(", dateAdded=");
		sb.append(getDateAdded());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.asu.iproject.student.skillset.model.Skillset");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>studentID</column-name><column-value><![CDATA[");
		sb.append(getStudentID());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>asuid</column-name><column-value><![CDATA[");
		sb.append(getAsuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>skill1</column-name><column-value><![CDATA[");
		sb.append(getSkill1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateAdded</column-name><column-value><![CDATA[");
		sb.append(getDateAdded());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Skillset.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Skillset.class
		};
	private long _studentID;
	private String _asuid;
	private String _email;
	private String _skill1;
	private Date _dateAdded;
	private Skillset _escapedModelProxy;
}